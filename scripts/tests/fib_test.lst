// Fibonacci generator with stack
// thought i could, but never thought if i should

0x00: B8 00 05         // MOV EAX 0 | Put x0500 in eax for ss
0x03: 8E D0           // MOV SS, EAX | set SS
0x05: BC 00           // MOV ESP, 0 Init stack pointer
0x07: 68 00 00 00 00  // push 0
0x0C: 68 00 00 00 01  // push 1
0x12: 66 68 00 02     // push 16 bit value for ds
0x16: 66 1F           // pop 16 bit value for ds
0x18: B9 00 00 00 00  // put address of N into ECX (0)
0x1D: 8B 09           // load N into C
0x1F: 8B EC           // Move ESP into EBP
0x21: 8B 45 FC        // EAX <- [EBP-4]   Loop
0x24: 03 45 F8        // ADD EAX [EBP-8]
0x27: 50              // Push EAX
0x28: 83 C9 FF        // add ECX, -1
0x2B: 75 01 // JNE to halt
0x2D: EB F4 // JMP to loop
0x2F: F4              // Halt

0x00002000: 03 00 00 00

// 0x00200000: // stack 